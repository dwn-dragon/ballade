cmake_minimum_required(VERSION 3.5.0)
project(Ballade VERSION 0.1.0 LANGUAGES C CXX)

set(ARCHIVE_DIRECTORY libs)
set(PDB_DIRECTORY pdbs)
set(LIBRARY_DIRECTORY ${PROJECT_NAME})
set(RUNTIME_DIRECTORY ${PROJECT_NAME})

set(CMAKE_PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/pdbs)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/libs)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${PROJECT_NAME})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${PROJECT_NAME})

foreach( OUTCONF ${CMAKE_CONFIGURATION_TYPES} )
	string( TOUPPER ${OUTCONF} UPOUTCONF )

	set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${UPOUTCONF} ${CMAKE_BINARY_DIR}/${OUTCONF}/${ARCHIVE_DIRECTORY} )
	link_directories(${CMAKE_BINARY_DIR}/${OUTCONF}/${ARCHIVE_DIRECTORY})

	set( CMAKE_PDB_OUTPUT_DIRECTORY_${UPOUTCONF} ${CMAKE_BINARY_DIR}/${OUTCONF}/${PDB_DIRECTORY} )

	set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${UPOUTCONF} ${CMAKE_BINARY_DIR}/${OUTCONF}/${LIBRARY_DIRECTORY} )
	set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${UPOUTCONF} ${CMAKE_BINARY_DIR}/${OUTCONF}/${RUNTIME_DIRECTORY} )
endforeach( OUTCONF )

#set(CMAKE_C_STANDARD 17)
#set(CMAKE_C_STANDARD_REQUIRED ON)
#set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)

##	External libraries
set(CMAKE_PREFIX_PATH libs/)
add_subdirectory(libs)

find_package(glbinding REQUIRED)

##	Demo
add_executable(Demo)

target_link_libraries(Demo glfw glbinding::glbinding glm)
target_include_directories(Demo PRIVATE include)
target_sources(Demo
	PRIVATE src/ext/stb_image.write.cpp

	PRIVATE src/gfx/shaders.cpp
	PRIVATE src/gfx/model.cpp

	PRIVATE src/demo.cpp
)

##	Test module
#include(CTest)
#enable_testing()
